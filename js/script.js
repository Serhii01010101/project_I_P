/* Задание на урок:

1) Создать переменную numberOfFilms и в неё поместить ответ от пользователя на вопрос:
'Сколько фильмов вы уже посмотрели?'



2) Создать объект personalMovieDB и в него поместить такие свойства:
    - count - сюда передается ответ на первый вопрос
    - movies - в это свойство поместить пустой объект
    - actors - тоже поместить пустой объект
    - genres - сюда поместить пустой массив
    - privat - в это свойство поместить boolean(логическое) значение false

3) Задайте пользователю по два раза вопросы:
    - 'Один из последних просмотренных фильмов?'
    - 'На сколько оцените его?'
Ответы стоит поместить в отдельные переменные
Записать ответы в объект movies в формате: 
    movies: {
        'logan': '8.1'
    }

Проверить, чтобы все работало без ошибок в консоли */

const numberOfFilms = +prompt('Сколько фильмов вы уже посмотрели?', '');

const personalMovieDB = {
  count: numberOfFilms,
  movies: {},
  actors: {},
  genres: [],
  privat: false,
};

const a = prompt('Один из последних просмотренных фильмов?', '');
const b = prompt('На сколько оцените его?', '');
const c = prompt('Один из последних просмотренных фильмов?', '');
const d = prompt('На сколько оцените его?', '');

personalMovieDB.movies[a] = b;
personalMovieDB.movies[c] = d;

console.log(personalMovieDB);

// const numberOfFilms = +prompt('Сколько фильмов вы уже посмотрели?', '');

// const personalMovieDB = {
//   count: numberOfFilms,
//   movies: {},
//   actors: {},
//   genres: [],
//   privat: false,
// };

// const a = prompt('Один из последних просмотренных фильмов?', '');
// const b = prompt('На сколько оцените его?', '');
// const c = prompt('Один из последних просмотренных фильмов?', '');
// const d = prompt('На сколько оцените его?', '');

// personalMovieDB.movies[a] = b;
// personalMovieDB.movies[c] = d;

// console.log(personalMovieDB);

// ChatGPT
// Ваш код собирает информацию о фильмах, которые пользователь посмотрел, и затем выводит объект personalMovieDB в консоль. Код выглядит вполне рабочим. Рассмотрим его шаг за шагом:

// const numberOfFilms = +prompt('Сколько фильмов вы уже посмотрели?', '');: Эта строка запрашивает у пользователя количество просмотренных фильмов. Введенное значение преобразуется в число и сохраняется в переменной numberOfFilms.

// Объект personalMovieDB создается с полями:

// count: количество просмотренных фильмов, устанавливается в numberOfFilms.
// movies: пустой объект, в который будут добавляться названия фильмов и их оценки.
// actors: пустой объект для информации об актерах (пока не используется).
// genres: пустой массив для информации о жанрах (пока не используется).
// privat: логическое значение, указывающее, является ли база данных приватной (false).
// Затем, с помощью четырех prompt, запрашивается информация о двух последних просмотренных фильмах и их оценках, которая сохраняется в переменных a, b, c, и d.

// personalMovieDB.movies[a] = b; и personalMovieDB.movies[c] = d;: Эти строки добавляют в объект movies информацию о двух последних просмотренных фильмах и их оценках.

// console.log(personalMovieDB);: Эта строка выводит объект personalMovieDB в консоль.

// Если у вас есть какие-либо вопросы или если есть что-то еще, с чем я могу помочь, дайте знать!

// User
// personalMovieDB.movies[a] = b; и personalMovieDB.movies[c] = d;: Эти строки добавляют в объект movies информацию о двух последних просмотренных фильмах и их оценках.
// ChatGPT
// Да, верно. Давайте рассмотрим эти строки более подробно:

// javascript
// Copy code
// personalMovieDB.movies[a] = b;
// personalMovieDB.movies[c] = d;
// Здесь personalMovieDB.movies - это объект, представляющий информацию о просмотренных фильмах. Этот объект использует названия фильмов в качестве ключей, а оценки - в качестве значений.

// personalMovieDB.movies[a] = b;: Добавляет информацию о первом фильме. Значение переменной a (название фильма) используется в качестве ключа, а значение переменной b (оценка фильма) - в качестве соответствующего значения.

// personalMovieDB.movies[c] = d;: То же самое, но для второго фильма. Используется переменная c для названия и переменная d для оценки.

// Таким образом, после выполнения этих строк, объект personalMovieDB.movies будет содержать информацию о двух последних просмотренных фильмах и их оценках.

// Пример: Если пользователь ввел "Inception" и оценку "9" для a и "The Shawshank Redemption" с оценкой "10" для c, то объект personalMovieDB.movies может выглядеть примерно так:

// javascript
// Copy code
// {
//   Inception: 9,
//   'The Shawshank Redemption': 10
// }
// User
// {
//   Inception: 9,
//   'The Shawshank Redemption': 10
// }
// ChatGPT
// Верно, ваш объект personalMovieDB.movies теперь содержит информацию о двух последних просмотренных фильмах и их оценках. Если у вас есть еще вопросы или если есть что-то еще, с чем я могу помочь, дайте знать!

// User
// почему в 1 случаке значение а во 2 строка в названии фмльма
// ChatGPT
// В JavaScript ключи объекта могут быть строками, числами или символами. Однако при использовании переменных в качестве ключей в объекте они интерпретируются как строки.

// В вашем коде:

// javascript
// Copy code
// personalMovieDB.movies[a] = b;
// personalMovieDB.movies[c] = d;
// Если переменные a и c содержат строки (названия фильмов, введенные пользователем), то они будут использованы в качестве ключей объекта personalMovieDB.movies. Ваш ввод пользователя, скорее всего, представляет собой строки, поэтому они идут в качестве ключей.

// Пример:
// Если пользователь ввел "Inception" для a и "The Shawshank Redemption" для c, то соответствующие строки будут использованы в качестве ключей:

// javascript
// Copy code
// {
//   Inception: 9,
//   'The Shawshank Redemption': 10
// }
// Обратите внимание на кавычки вокруг ключа 'The Shawshank Redemption'. Они используются, потому что ключ содержит пробел, и это обеспечивает правильное представление ключа в объекте JavaScript.
